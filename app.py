from flask import Flask, render_template, request, redirect, url_for, flash
import json
import os
import wifi  # wifi.py —Ä—è–¥–æ–º

CONFIG_PATH = "config.json"

app = Flask(__name__)
app.secret_key = "your_secret_key"

def load_config():
    if not os.path.exists(CONFIG_PATH):
        return {
            "wake_word": "–ø—Ä–∏–≤–µ—Ç",
            "style_prompt": "–û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ, –ø–æ–Ω—è—Ç–Ω–æ –∏ –∫–∞–∫ –±—ã–¥–ª–æ, –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —é–º–æ—Ä –∫–∞–∫–æ–π-—Ç–æ. –ò–∑–±–µ–≥–∞–π –¥–ª–∏–Ω–Ω—ã—Ö –æ–±—ä—è—Å–Ω–µ–Ω–∏–π.",
            "voice_id": "Obuyk6KKzg9olSLPaCbl"
        }
    with open(CONFIG_PATH, "r", encoding="utf-8") as f:
        return json.load(f)

def save_config(config):
    with open(CONFIG_PATH, "w", encoding="utf-8") as f:
        json.dump(config, f, ensure_ascii=False, indent=2)

@app.route("/")
def start():
    print("üß™ STATE_FILE exists:", os.path.exists(STATE_FILE))
    if is_first_run():
        print("üëâ –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫! –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –∏–Ω—Ç—Ä–æ")
        return redirect(url_for("intro"))
    print("‚úÖ –£–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ, –æ—Ç–∫—Ä—ã–≤–∞–µ–º index")
    return redirect(url_for("index"))

@app.route("/", methods=["GET", "POST"])
def index():
    config = load_config()
    if request.method == "POST":
        config["wake_word"] = request.form.get("wake_word", "").strip()
        config["style_prompt"] = request.form.get("style_prompt", "").strip()
        config["voice_id"] = request.form.get("voice_id", "").strip()
        save_config(config)
        flash("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")
        return redirect(url_for("index"))
    return render_template("index.html", config=config)

@app.route("/setup_wifi", methods=["GET", "POST"])
def setup_wifi():
    current_connection = wifi.get_current_connection()
    networks = wifi.list_networks()
    if request.method == "POST":
        ssid = request.form.get("ssid")
        password = request.form.get("password")
        if not ssid or not password:
            flash("‚ùå –£–∫–∞–∂–∏—Ç–µ —Å–µ—Ç—å –∏ –ø–∞—Ä–æ–ª—å!")
            return redirect(url_for("setup_wifi"))
        success = wifi.connect_to_network(ssid, password)
        if success:
            flash(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ {ssid}")
        else:
            flash(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ {ssid}")
        return redirect(url_for("setup_wifi"))
    return render_template("wifi_setup.html", current_connection=current_connection, networks=networks)

@app.route("/activate", methods=["POST"])
def activate():
    key = request.form.get("activation_key", "").strip()
    # –õ–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–ª—é—á–∞ ‚Äî –ø–æ–∫–∞ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
    if key == "–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π_–∫–ª—é—á":  # –∑–∞–≥–ª—É—à–∫–∞, –ø–æ—Ç–æ–º –∑–∞–º–µ–Ω–∏—à—å
        # –ú–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —á—Ç–æ-—Ç–æ –≤ config –∏–ª–∏ —Ñ–∞–π–ª–µ, —á—Ç–æ –∞–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞
        flash("‚úÖ –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!")
        return redirect(url_for("index"))
    else:
        flash("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∫–ª—é—á –∞–∫—Ç–∏–≤–∞—Ü–∏–∏!")
        return redirect(url_for("activate_page"))

@app.route("/activate_page")
def activate_page():
    return render_template("activate.html")

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000)

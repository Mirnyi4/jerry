import speech_recognition as sr
from gtts import gTTS
import os
import tempfile
import time
import threading
import requests

WAKE_WORD = "–ø—Ä–∏–≤–µ—Ç"
GROK_API_KEY = "xai-zMjk4pJBgSuTmJIRvms8Op8OKM7WiBW1MTUAEtyRUoUCel3L9PqsB2Tib0AnXWro4BOB9V3dulo7OcUr"

recognizer = sr.Recognizer()
mic = sr.Microphone()

def speak(text):
    try:
        tts = gTTS(text=text, lang='ru')
        with tempfile.NamedTemporaryFile(delete=True, suffix=".mp3") as fp:
            tts.save(fp.name)
            os.system(f"mpg123 {fp.name}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–µ–∑–∞ —Ä–µ—á–∏: {e}")

def ask_grok(question: str) -> str:
    url = "https://api.x.ai/v1/chat/completions"
    headers = {
        "Content-Type": "application/json",
        "Authorization": f"Bearer {GROK_API_KEY}"
    }
    data = {
        "messages": [
            {
                "role": "system",
                "content": "–¢—ã –≥–æ–ª–æ—Å–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –Ω–∞ Raspberry Pi Zero 2 W. –û—Ç–≤–µ—á–∞–π –ø–æ–Ω—è—Ç–Ω–æ –∏ –∫—Ä–∞—Ç–∫–æ."
            },
            {
                "role": "user",
                "content": question
            }
        ],
        "model": "grok-3-latest",
        "stream": False,
        "temperature": 0.7
    }
    try:
        response = requests.post(url, headers=headers, json=data)
        response.raise_for_status()
        result = response.json()
        return result["choices"][0]["message"]["content"]
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ Grok:", e)
        return "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ —Å–º–æ–≥ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç."

def listen_for_command(timeout=15):
    with mic as source:
        print("üé§ –°–ª—É—à–∞—é –∫–æ–º–∞–Ω–¥—É...")
        recognizer.adjust_for_ambient_noise(source)
        try:
            audio = recognizer.listen(source, timeout=timeout)
            command = recognizer.recognize_google(audio, language="ru-RU")
            print(f"üó£ –ö–æ–º–∞–Ω–¥–∞: {command}")
            return command.lower()
        except sr.WaitTimeoutError:
            print("‚åõ –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ.")
        except sr.UnknownValueError:
            print("ü§∑ –ù–µ –ø–æ–Ω—è–ª —Ä–µ—á—å.")
        except sr.RequestError as e:
            print(f"–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è: {e}")
        return None

def main_loop():
    while True:
        print("üéß –û–∂–∏–¥–∞—é –∞–∫—Ç–∏–≤–∞—Ü–∏—é... –°–∫–∞–∂–∏—Ç–µ '–ü—Ä–∏–≤–µ—Ç'")
        command = listen_for_command(timeout=10)
        if command and WAKE_WORD in command:
            print("‚úÖ –ê–∫—Ç–∏–≤–∞—Ü–∏—è!")
            speak("–°–ª—É—à–∞—é —Ç–µ–±—è")
            command = listen_for_command(timeout=15)
            if command:
                response = ask_grok(command)
                print("ü§ñ –û—Ç–≤–µ—Ç:", response)
                speak(response)
            else:
                speak("–Ø –Ω–µ —É—Å–ª—ã—à–∞–ª –∫–æ–º–∞–Ω–¥—ã.")
        time.sleep(1)

if __name__ == "__main__":
    main_loop()

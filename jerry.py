import speech_recognition as sr
from gtts import gTTS
import os
import requests
import time

# üîë –¢–≤–æ–π API-–∫–ª—é—á –æ—Ç x.ai (Grok)
GROK_API_KEY = "xai-uT9dB1qXXGWVidc9OpXacnjegjXwVWrjAye5o6M7N82QwW3fQL66YVjDkqMxmhfDgF280V3SKUdiA1AT"
GROK_API_URL = "https://x.ai/api/chat"

# üì¶ –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ (–º–æ–∂–Ω–æ –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å, —Å–µ–π—á–∞—Å –ø—Ä–æ—Å—Ç–∞—è)
dialogue_history = []

# üì¢ –§—É–Ω–∫—Ü–∏—è –æ–∑–≤—É—á–∫–∏
def speak(text):
    tts = gTTS(text, lang='ru')
    filename = f"voice_{int(time.time())}.mp3"
    tts.save(filename)
    os.system(f"mpg123 {filename}")
    os.remove(filename)

# üì• –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ–∫—Å—Ç–∞ –≤ Grok
def ask_grok(prompt):
    headers = {
        "Authorization": f"Bearer {GROK_API_KEY}",
        "Content-Type": "application/json",
    }

    # –î–æ–±–∞–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –≤ –∑–∞–ø—Ä–æ—Å
    messages = [{"role": "system", "content": "–¢—ã –≥–æ–ª–æ—Å–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –∏–º–µ–Ω–∏ –î–∂–æ—Ä–¥–∂–∏"}]
    for item in dialogue_history:
        messages.append({"role": "user", "content": item["user"]})
        messages.append({"role": "assistant", "content": item["bot"]})

    messages.append({"role": "user", "content": prompt})

    data = {
        "messages": messages,
        "model": "grok-1"
    }

    response = requests.post(GROK_API_URL, json=data, headers=headers)
    if response.status_code == 200:
        reply = response.json().get("message", {}).get("content", "–ò–∑–≤–∏–Ω–∏, —è –Ω–µ –ø–æ–Ω—è–ª.")
        dialogue_history.append({"user": prompt, "bot": reply})
        return reply
    else:
        return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ Grok."

# üé§ –°–ª—É—à–∞–µ–º –º–∏–∫—Ä–æ—Ñ–æ–Ω –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É
def listen():
    recognizer = sr.Recognizer()
    mic = sr.Microphone()

    with mic as source:
        print("üéß –°–ª—É—à–∞—é... –°–∫–∞–∂–∏ '–ü—Ä–∏–≤–µ—Ç' –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏")
        recognizer.adjust_for_ambient_noise(source)
        audio = recognizer.listen(source)

    try:
        text = recognizer.recognize_google(audio, language="ru-RU").lower()
        print("üì¢ –¢—ã —Å–∫–∞–∑–∞–ª:", text)
        return text
    except:
        return ""

# üß† –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
def main():
    while True:
        said = listen()
        if "–ü—Ä–∏–≤–µ—Ç" in said:
            speak("–ß—Ç–æ?")
            print("üü¢ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ")
            time.sleep(1)
            command = listen()
            if command:
                print("üì® –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Grok:", command)
                response = ask_grok(command)
                print("ü§ñ –î–∂–æ—Ä–¥–∂–∏:", response)
                speak(response)

if __name__ == "__main__":
    main()
